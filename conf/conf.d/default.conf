server {
  listen {{PORT}} default_server;

  location /elb-status {
    access_log off;
    return 200 'A-OK!';
    add_header Content-Type text/plain;
  }

  location /robots.txt {
    return 200 "User-agent: *\nDisallow: /";
  }

  location /api.twilio.com/ {
    proxy_pass https://api.twilio.com/;
  }

  location /get.tech/ {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      #
      # Custom headers and headers various browsers *should* be OK with but aren't
      #
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      #
      # Tell client that this pre-flight info is valid for 20 days
      #
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
     }

     if ($request_method = 'POST') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     }

     if ($request_method = 'GET') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
     }

    proxy_pass http://get.tech/;
  }

  # This can be changed to "~ ^/([A-z]*\.|)imgur.com" to allow any Imgur subdomain.
  #
  # It's currently limited to i.imgur.com to prevent abuse.
  location /i.imgur.com/ {
    rewrite ^/([A-z]*\.|)imgur.com(.*)$ $2 break;

    proxy_set_header Accept-Encoding '';

    subs_filter_types text/css application/javascript;
    subs_filter ([A-z]+\.|)imgur.com surrogate.hackedu.us/$1imgur.com r;
    subs_filter \"/([A-z]) \"//surrogate.hackedu.us/imgur.com/$1 r;

    resolver 8.8.8.8;
    proxy_pass https://$1imgur.com;
  }

  location ~ ^/([A-z0-9]*\.|)giphy.com {
    rewrite ^/([A-z0-9]*\.|)giphy.com(.*)$ $2 break;

    proxy_set_header Accept-Encoding '';

    subs_filter_types text/css application/javascript application/json;
    subs_filter ([A-z0-9]+\.|)giphy.com surrogate.hackedu.us/$1giphy.com r;
    subs_filter \"/([A-z]) \"//surrogate.hackedu.us/giphy.com/$1 r;

    resolver 8.8.8.8;
    proxy_pass https://$1giphy.com;
  }

  location / {
    return 200 "Hello there! See https://github.com/hackclub/surrogate for details on what I am.";
    add_header Content-Type text/plain;
  }
}
